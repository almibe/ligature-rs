// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

import { runTests, test, assertEq } from "../util/test"
import { tokenize, Integer, Name, Boolean, WhiteSpace, NewLine } from "./wander-lexer"

// Cases to test:
//   Boolean(Bool),
//   WhiteSpace(String),
//   Identifier(String),
//   Integer(Int64),
//   Comment(String),
//   NewLine(String),
//   StringLiteral(String),
//   BytesLiteral(Bytes),
//   LetKeyword,
//   EqualSign,
//   Name(String),
//   OpenBrace,
//   CloseBrace,
//   Colon,
//   OpenParen,
//   CloseParen,
//   OpenSquare,
//   CloseSquare,
//   Arrow,
//   Dot,
//   QuestionMark,
//   IfKeyword,
//   ElsifKeyword,
//   ElseKeyword,

runTests("Wander Lexer", [
    test("tokenize Integers", () => {
        assertEq(tokenize("1"), Some([Integer(1L)]))
        assertEq(tokenize("1000"), Some([Integer(1000L)]))
        assertEq(tokenize("-42"), Some([Integer(-42L)]))
    }),
    test("tokenize Names", () => {
        assertEq(tokenize("hello"), Some([Name("hello")]))
    }),
    test("tokenize booleans", () => {
        assertEq(tokenize("true"), Some([Boolean(true)]))
        assertEq(tokenize("false"), Some([Boolean(false)]))
    }),
    test("tokenize whitespace", () => {
        assertEq(tokenize(" "), Some([WhiteSpace(" ")]))
        assertEq(tokenize("   "), Some([WhiteSpace("   ")]))
        assertEq(tokenize("\t"), Some([WhiteSpace("\t")]))
        assertEq(tokenize("\t  "), Some([WhiteSpace("\t  ")]))
    }),
    test("tokenize new lines", () => {
        assertEq(tokenize("\n"), Some([NewLine("\n")]))
        assertEq(tokenize("\r\n"), Some([NewLine("\r\n")]))
        assertEq(tokenize("\n\n\r\n"), Some([NewLine("\n\n\r\n")]))
    }),
])
